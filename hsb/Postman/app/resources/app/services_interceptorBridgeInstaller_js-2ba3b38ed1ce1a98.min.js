exports.ids=["services_interceptorBridgeInstaller_js"],exports.modules={"./services/interceptorBridgeInstaller.js":function(e,r,t){var n=t("./node_modules/async/lib/async.js"),o=t("./node_modules/lodash/lodash.js"),s=t("./services/windowManager.js").windowManager,i=t("./utils/interceptor/utils.js").utils,l=o.debounce(i.checkInstallationStatusForMacOS,3e3),a=o.debounce(i.checkInstallationStatusForWindows,3e3),d=o.debounce(i.checkInstallationStatusForLinux,3e3);r.installer={installNode(){if("MACOS"!==i.currentOS)throw Error("The current OS does not require Node installation");s.sendInternalMessage({event:"nodeInstallationStatusUpdate",object:{status:"downloadStarted"}}),n.auto({downloadDirectoryPath:i.createDownloadsDirectory,installationDependencies:i.getNodeInstallerDependencies,nodeInstallerPath:["downloadDirectoryPath","installationDependencies",i.downloadNodeInstaller],installNode:["nodeInstallerPath","installationDependencies",i.initiateNodeInstallation]},(e,r)=>{if(e){console.log("Error occurred while downloading Node installer",e);var t={};t.status="error",t.errorMessage=e.message,e.type&&(t.type=e.type),e.subType&&(t.subType=e.subType),s.sendInternalMessage({event:"nodeInstallationStatusUpdate",object:t})}})},installInterceptorBridge(){s.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"downloadStarted"}}),n.auto({interceptorDependencies:i.fetchInterceptorDependenciesManifest,interceptorBridgeDirectoryPath:i.createPostmanInterceptorBridgeDirectory,nodeInstalledStatus:i.checkNodeInstallationStatus,interceptorBridgeFilePath:["interceptorDependencies","interceptorBridgeDirectoryPath","nodeInstalledStatus",i.downloadInterceptorBridge],manifest:["interceptorBridgeFilePath",i.createManifest],manifestInstalled:["manifest",i.installManifest],registryKey:i.addRegistryKey},(e,r)=>{if(e){var t={};t.status="error",t.errorMessage=e.message,e.type&&(t.type=e.type),e.subType&&(t.subType=e.subType),s.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:t}),console.log("Error occurred while installing InterceptorBridge",e)}else console.log("InterceptorBridge is installed successfully"),s.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"installationFinished"}})})},checkInstallationStatus(){switch(i.currentOS){case"MACOS":l();break;case"WINDOWS":a();break;case"LINUX":d();break;default:console.log("Current OS is not supported")}},resetInstallation(){n.parallel({interceptorBridge:i.removeInterceptorBridge,manifest:i.removeManifest,registryKey:i.removeRegistryKey},(e,r)=>{if(e)s.sendInternalMessage({event:"interceptorBridgeResetStatusUpdate",object:{status:"error",errorMessage:e.message}}),console.log("Error occurred while resetting Interceptor Bridge: ",e);else{var t=[];r.interceptorBridge.error&&t.push(r.interceptorBridge.message),r.manifest.error&&t.push(r.manifest.message),r.registryKey.error&&t.push(r.registryKey.message),t.length>0?(s.sendInternalMessage({event:"interceptorBridgeResetStatusUpdate",object:{status:"error",errorMessage:t.join("\n")}}),console.log("Interceptor Bridge reset failed")):(s.sendInternalMessage({event:"interceptorBridgeResetStatusUpdate",object:{status:"success"}}),console.log("Interceptor Bridge is reset successfully"))}})}}},"./utils/interceptor/utils.js":function(e,r,t){var n,o,s;let i=t("./node_modules/lodash/lodash.js"),l=t("fs"),a=t("./node_modules/async/lib/async.js"),d=t("https"),c=t("./services/windowManager.js").windowManager,{getConfig:g}=t("./services/AppConfigService.js"),{shell:p}=t("electron"),u=t("./node_modules/shelljs/shell.js"),I={MACOS:"/Library/Application Support/Google/Chrome/NativeMessagingHosts/",LINUX:"/.config/google-chrome/NativeMessagingHosts/",WINDOWS:"HKCU\\Software\\Google\\Chrome\\NativeMessagingHosts\\"},f="INTERNET_CONNECTIVITY",y="FILE_PERMISSIONS_REQUIRED";s=r.utils={currentOS:o=function(){switch(process.platform){case"darwin":return"MACOS";case"win32":case"win64":return"WINDOWS";case"linux":return"LINUX";default:return null}}(),getUserHome:function(){return process.env["win32"==process.platform?"USERPROFILE":"HOME"]},fetchInterceptorDependenciesManifest:function(e){t("./node_modules/request/index.js")(g("__WP_INTERCEPTOR_DEPENDENCIES_DOWNLOAD_URL__"),function(r,t){if(r){pm.logger.error("Interceptor ~ Dependencies: Download failed",r);var s=Error("Error occurred while downloading Interceptor Dependencies");return s.type="download",s.subType=f,console.log("Error occurred while downloading Interceptor Dependencies: ",r),e(s)}try{n=JSON.parse(t.body).platform[o]}catch(r){return pm.logger.error("Interceptor ~ Dependencies: Unable to parse JSON",r),r.type="download",e(r)}return e(null,n)})},compareSHA256Hash:function(e,r,n){var o=t("crypto").createHash("sha256");try{var s=l.ReadStream(r)}catch(e){return console.log("Error occurred while creating stream"),n(e)}s.on("data",function(e){o.update(e)}),s.on("end",function(){return(o=o.digest("hex"))===e?(console.log("Computed hash is matched successfully"),n(null,!0)):(console.log("Computed hash and expected hash are not same"),n(null,!1))}),s.on("error",function(e){return console.log("Error occurred while generating hash using SHA256",e),n(Error("Error occurred while generating hash"))})},createDownloadsDirectory:function(e){var r=s.getUserHome()+"/Downloads/";l.stat(r,function(t){if(t)if("ENOENT"!==t.code)return pm.logger.error("Interceptor ~ Node: Unable to access Downloads directory",t),t.type="installation",t.subType=y,t.message="Error occurred while checking existence of ~/Downloads folder",console.log("Error occurred while checking existence of ~/Downloads folder",t),e(t);else l.mkdir(r,t=>t?(pm.logger.error("Interceptor ~ Node: Unable to create Downloads directory",t),t.type="installation",t.subType=y,t.message="Error occurred in creating ~/Downloads folder",console.log("Error occurred in creating ~/Downloads folder"),e(t)):e(null,r));else l.access(r,l.constants.W_OK,t=>t?(pm.logger.error("Interceptor ~ Node: Unable to access Downloads directory",t),console.log("Do not have write access for ~/Downloads folder"),t.type="installation",t.subType=y,t.message="Error occurred while accessing ~/Downloads folder",e(t)):e(null,r))})},getNodeInstallerDependencies:function(e){if(n)return e(null,n.nodeInstaller);s.fetchInterceptorDependenciesManifest((r,t)=>r?e(r):e(null,t.nodeInstaller))},downloadNodeInstaller:function(e,r){var t,n,o=r.installationDependencies.downloadURL.substring(r.installationDependencies.downloadURL.lastIndexOf("/")+1);o||(o="node_installer.pkg"),n=r.downloadDirectoryPath+o,d.get(r.installationDependencies.downloadURL,function(r){if(console.log("Downloading Node installer..."),200===r.statusCode){try{t=l.createWriteStream(n),r.pipe(t)}catch(r){return pm.logger.error("Interceptor ~ Node: Unable to create write stream",r),r.type="installation",r.subType=y,t.end(),e(r)}t.on("finish",function(){return console.log("Node is downloaded at location: ",n),t.end(),e(null,n)})}else{t.end(),pm.logger.error("Interceptor ~ Node: Download failed",r.statusCode);var o=Error("Error occurred while downloading Node installer");return o.type="download",o.subType=f,e(o)}}).on("error",function(r){return pm.logger.error("Interceptor ~ Node: Download failed",r),console.log("Error occurred while downloading Node installer"),r.type="download",r.subType=f,e(r)})},checkIntegrityForDownloadedNodeInstaller:function(e,r,t){try{s.compareSHA256Hash(e,r,(e,n)=>{if(e)return pm.logger.error("Interceptor ~ Node: Integrity check failed",e),e.type="download",console.log("The integrity check for the Node installer failed"),t(e);if(n)return console.log("Node Installer is downloaded successfully"),t(null,!0);if(!n){pm.logger.error("Interceptor ~ Node: Integrity check failed");var e=Error("The integrity check for the Node installer failed");return e.type="download",console.log("The integrity check for the Node installer failed"),s.removeCorruptedDependency(e,r,t)}})}catch(e){return pm.logger.error("Interceptor ~ Node: Download failed",e),e.type="download",e.subType=f,console.log("Error occurred while downloading the Node installer"),t(e)}},registerCheckNodeInstallationStatusListener:function(){var e=setInterval(function(){s.checkNodeInstallationStatus((t,n)=>{n.installed&&(setTimeout(function(){c.sendInternalMessage({event:"nodeInstallationStatusUpdate",object:{status:"installationFinished"}})},2e3),clearInterval(e),clearTimeout(r))})},2e3),r=setTimeout(function(){c.sendInternalMessage({event:"nodeInstallationStatusUpdate",object:{status:"installationNotFinished"}}),console.log("Node installation is not finished"),clearInterval(e)},12e4)},initiateNodeInstallation:function(e,r){s.checkIntegrityForDownloadedNodeInstaller(r.installationDependencies.sha256hash,r.nodeInstallerPath,(t,n)=>{if(t)return e(t);if(n){try{c.sendInternalMessage({event:"nodeInstallationStatusUpdate",object:{status:"downloadFinished"}}),p.openPath(r.nodeInstallerPath).then(e=>{e&&pm.logger.error(`Interceptor ~ Node: Failed to open logs folder ${e}`)})}catch(r){return pm.logger.error("Interceptor ~ Node: Installation failed",r),r.type="installation",r.subType=y,e(r)}s.registerCheckNodeInstallationStatusListener()}return e(null)})},checkNodeInstallationStatus:function(e){for(var r,t,n,o=["/usr/local/bin/node","/usr/bin/node"],d={installed:!1},c=0;c<o.length;c++)if(l.existsSync(o[c]))return e(null,{installed:!0,path:o[c]});r=s.getUserHome()+"/.nvm/versions/node",a.waterfall([a.apply(l.readdir,r),(e,o)=>(i.each(e,e=>{if(!isNaN(n=parseInt(e.substring(1,e.indexOf("."))))&&n>=6&&(t=r+"/"+e+"/bin/node",l.existsSync(t)))return o(null,t)}),o("No node installation found in "+r))],(r,t)=>{e(null,r?{installed:!1}:{installed:!0,path:t})})},createPostmanInterceptorBridgeDirectory:function(e){var r,n=s.getUserHome(),i="InterceptorBridge";if("MACOS"===o)n+="/.postman/";else if("WINDOWS"===o)n+="\\.postman\\";else{if("LINUX"!==o)return console.log("Current OS is not supported"),pm.logger.error("Interceptor ~ Bridge: Unsupported OS type"),(r=Error("Current OS is not supported")).type="installation",e(r);n+="/.postman/"}if(l.existsSync(n))if(l.existsSync(n+i))return e(null,t("path").join(n,i));else l.mkdir(n+i,o=>o?(console.log("Error occurred while creating InterceptorBridge folder: ",o.message),pm.logger.error("Interceptor ~ Bridge: Unable to create InterceptorBridge folder",o),(r=Error("Error occurred while creating InterceptorBridge folder: ",o.message)).type="installation",r.subType=y,e(r)):e(null,t("path").join(n,i)));else l.mkdir(n,o=>{if(o)return console.log("Error occurred while creating .postman directory"),pm.logger.error("Interceptor ~ Bridge: Unable to create .postman directory",o),(r=Error("Error occurred while creating .postman directory")).type="installation",r.subType=y,e(r);l.mkdir(n+i,o=>o?(console.log("Error occurred while creating InterceptorBridge folder"),pm.logger.error("Interceptor ~ Bridge: Unable to create InterceptorBridge folder",o),(r=Error("Error occurred while creating InterceptorBridge folder")).type="installation",r.subType=y,e(r)):e(null,t("path").join(n,i)))})},getInterceptorBridgeFileName:function(){switch(o){case"MACOS":case"LINUX":return"InterceptorBridge";case"WINDOWS":return"InterceptorBridge.exe";default:return null}},downloadInterceptorBridge:function(e,r){var t,n,i,a,g;if(!r.nodeInstalledStatus.installed&&"MACOS"===o)return(g=Error("Node is required to execute Interceptor Bridge")).type="nodeRequired",e(g);if(!(t=s.getInterceptorBridgeFileName()))return e(Error("Current OS is not supported"));if(n=r.interceptorBridgeDirectoryPath+"/"+t,"MACOS"===o&&(i=n,n+=".template"),l.existsSync(n))try{l.unlinkSync(n)}catch(r){return console.log("InterceptorBridge already exists. Please delete "+n),pm.logger.error("Interceptor ~ Bridge: Unable to delete existing Interceptor Bridge",r),(g=Error(r)).type="installation",g.subType=y,e(g)}try{a=l.createWriteStream(n)}catch(r){return console.log("Error occurred in creating write stream to "+n),pm.logger.error("Interceptor ~ Bridge: Unable to create write stream",r),(g=Error("Error occurred in creating write stream to "+n)).type="installation",g.subType=y,e(g)}d.get(r.interceptorDependencies.interceptorBridge.downloadURL,function(t){if(console.log("Downloading Interceptor Bridge..."),200!==t.statusCode)return pm.logger.error("Interceptor ~ Bridge: Download failed",t.statusCode),(g=Error("Error occurred while downloading InterceptorBridge")).type="download",g.subType=f,e(g);t.pipe(a),a.on("finish",function(){a.end(),s.compareSHA256Hash(r.interceptorDependencies.interceptorBridge.sha256hash,n,(t,a)=>{if(t)return pm.logger.error("Interceptor ~ Bridge: Integrity check failed",t),t.type="download",e(t);if(!a)return console.log("Integrity check for Interceptor Bridge failed"),pm.logger.error("Interceptor ~ Bridge: Integrity check failed"),(g=Error("Integrity check for Interceptor Bridge failed")).type="download",s.removeCorruptedDependency(g,n,e);if(console.log("Integrity checks for InterceptorBridge have passed successfully"),"MACOS"===o)s.addShebangLineToInterceptorBridge(r.nodeInstalledStatus,n,i,(r,t)=>{if(r)return e(r);try{return l.chmodSync(i,493),c.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"downloadFinished"}}),e(null,i)}catch(r){return console.log("Something went wrong while modifying the permission of InterceptorBridge"),pm.logger.error("Interceptor ~ Bridge: Unable to modify the permission of Interceptor Bridge",r),r.type="installation",r.subType=y,e(r)}});else try{return l.chmodSync(n,493),c.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"downloadFinished"}}),console.log("Interceptor Bridge is downloaded at location: ",n),e(null,n)}catch(r){return console.log("Something went wrong while modifying the permission of InterceptorBridge"),pm.logger.error("Interceptor ~ Bridge: Unable to modify the permission of Interceptor Bridge",r),(g=Error("Something went wrong while modifying the permission of InterceptorBridge")).type="installation",g.subType=y,e(g)}})})}).on("error",function(r){return console.log("Error occurred while downloading InterceptorBridge from given URL"),pm.logger.error("Interceptor ~ Bridge: Download failed",r),(g=Error("Error occurred while downloading InterceptorBridge from given URL")).type="download",g.subType=f,e(g)})},addShebangLineToInterceptorBridge:function(e,r,t,n){if(!e.installed)return(i=Error("Node is required to execute Interceptor Bridge")).type="nodeRequired",n(i);var o,s,i,a="#!"+e.path;try{l.existsSync(t)&&l.unlinkSync(t),o=l.createReadStream(r),s=l.createWriteStream(t)}catch(e){return console.log("Error occurred while creating streams"),pm.logger.error("Interceptor ~ Bridge: Unable to add shebang line",e),(i=Error("Error occurred while creating streams")).type="installation",i.subType=y,n(i)}s.write(a+"\n"),o.on("data",e=>{s.write(e)}),o.on("end",()=>(o.destroy(),s.end(),console.log("Interceptor Bridge is downloaded at location: ",t),n(null,!0))),o.on("error",function(e){return console.log("Error occurred while reading stream",e),pm.logger.error("Interceptor ~ Bridge: Unable to add shebang line",e),(i=Error("Something went wrong while reading stream")).type="installation",i.subType=y,n(i)})},createManifest:function(e,r){var t={name:g("__WP_INTERCEPTOR_MANIFEST_FILENAME__"),description:"Native Messaging Host for Postman Native App <> Interceptor Integration",path:r.interceptorBridgeFilePath,type:"stdio",allowed_origins:["chrome-extension://"+g("__WP_INTERCEPTOR_APP_ID__")+"/"]};return console.log("Interceptor manifest being installed: "+JSON.stringify(t,null,2)),e(null,t)},installManifest:function(e,r){if(console.log("Installing manifest for Native App ~ Interceptor Integration"),!o)return e(Error("Current OS not supported"));var t=s.getUserHome();if("MACOS"===o)t+=I.MACOS;else if("LINUX"===o)t+=I.LINUX;else{if("WINDOWS"!==o)return e(Error("Current OS: "+o+" is not supported"));t+="\\.postman\\InterceptorBridge\\"}t+=r.manifest.name+".json",c.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"installationStarted"}});try{l.writeFileSync(t,JSON.stringify(r.manifest,null,2))}catch(r){return console.log(r),pm.logger.error("Interceptor ~ Bridge: Unable to add manifest",r),r.message="Error occurred while writing manifest",r.type="installation","ENOENT"===r.code?r.subType="CHROME_NOT_INSTALLED":r.subType=y,e(r)}return c.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"manifestAdded"}}),console.log("Manifest installed to "+t),e(null,!0)},addRegistryKey:function(e){if("WINDOWS"!==o)return e(null);u.exec('REG ADD "'+I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+'" /ve /t REG_SZ /d "%USERPROFILE%\\.postman\\InterceptorBridge\\'+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+'.json" /f',function(r,t,n){if(0===r)return c.sendInternalMessage({event:"interceptorBridgeInstallationStatusUpdate",object:{status:"registryKeyAdded"}}),console.log("Registry key is added successfully"),e(null);pm.logger.error("Interceptor ~ Bridge: Unable to add registry key",n);var o=Error("Error occurred while adding registry key: ",n);return o.type="installation",o.subType="REGISTRY_ACCESS_NEEDED",e(o)})},checkManifestInstallation:function(){var e=s.getUserHome(),r=g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+".json";return e+=I[o],!!l.existsSync(e+r)},checkInterceptorBridgeInstallation:function(e,r){var t,n,i=s.getUserHome(),a={},d=g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+".json";if("WINDOWS"===o?i+="/.postman/InterceptorBridge/":i+=I[o],!e)return a.isBridgeInstalled=!1,a.isManifestInstalled=!1,r(null,a);l.readFile(i+d,"utf8",function(e,o){if(e)a.isManifestInstalled=!1,a.isBridgeInstalled=!1;else try{t=JSON.parse(o),a.isManifestInstalled=!0,n=t.path,l.existsSync(n)?a.isBridgeInstalled=!0:a.isBridgeInstalled=!1}catch(e){return a.isManifestInstalled=!1,a.isBridgeInstalled=!1,r(e)}return r(null,a)})},checkInstallationStatusForLinux:function(){var e={},r=s.checkManifestInstallation;s.checkInterceptorBridgeInstallation(r,(r,t)=>{r?console.log("Error while checking the installation status",r):(e={platformSpecific:{os:"LINUX"},manifestAdded:t.isManifestInstalled,interceptorBridgeInstalled:t.isBridgeInstalled},c.sendInternalMessage({event:"interceptorBridgeInstallationStatusResponse",object:{status:e}}))})},checkInstallationStatusForMacOS:function(){var e={},r=s.checkManifestInstallation();a.auto({nodeInstallation:s.checkNodeInstallationStatus,status:a.apply(s.checkInterceptorBridgeInstallation,r)},(r,t)=>{r?console.log("Error while checking the installation status:",r):(e={platformSpecific:{nodeInstalled:t.nodeInstallation.installed,nodePath:t.nodeInstallation.path,os:"MACOS"},manifestAdded:t.status.isManifestInstalled,interceptorBridgeInstalled:t.status.isBridgeInstalled},c.sendInternalMessage({event:"interceptorBridgeInstallationStatusResponse",object:{status:e}}))})},checkInstallationStatusForWindows:function(){var e={};u.exec("REG QUERY "+I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__"),function(r,t,n){if(0!==r)e.platformSpecific={os:"WINDOWS",registryKeyAdded:!1},console.log("Error occurred while querying registry key: ",n),e.manifestAdded=!1,e.interceptorBridgeInstalled=!1,c.sendInternalMessage({event:"interceptorBridgeInstallationStatusResponse",object:{status:e}});else{var o,i;if(t){var o=t.trim().split("REG_SZ");if((o=o.filter(e=>0!==e.trim().replace("/\r?\n|\r/g","").length)).length>=1)try{i=o[1].trim(),e.platformSpecific={os:"WINDOWS",registryKeyAdded:!0},console.log("Native App ~ Interceptor: Registry key exists")}catch(r){console.log("Native App ~ Interceptor: Error occurred while querying registry key: ",r,t),e.platformSpecific={os:"WINDOWS",registryKeyAdded:!1},console.log("Native App ~ Interceptor: Registry doesn't key exist: ",o)}else e.platformSpecific={os:"WINDOWS",registryKeyAdded:!1},console.log("Native App ~ Interceptor: Registry doesn't key exist")}else e.platformSpecific={os:"WINDOWS",registryKeyAdded:!1};i&&l.existsSync(i)?s.checkInterceptorBridgeInstallation(!0,(r,t)=>{r?console.log("Error while reading manifest: ",r):(e.manifestAdded=t.isManifestInstalled,e.interceptorBridgeInstalled=t.isBridgeInstalled,c.sendInternalMessage({event:"interceptorBridgeInstallationStatusResponse",object:{status:e}}))}):(e.manifestAdded=!1,e.interceptorBridgeInstalled=!1,c.sendInternalMessage({event:"interceptorBridgeInstallationStatusResponse",object:{status:e}}))}})},removeInterceptorBridge:function(e){var r=t("path").join(s.getUserHome(),".postman","InterceptorBridge");u.exec("rm -rf "+r,(t,n,o)=>0!==t?e(null,{error:!0,message:`Could not remove "${r}", please remove it manually`}):(console.log(`${r} is removed completely`),e(null,{error:!1})))},removeManifest:function(e){var r;if("MACOS"!==o&&"LINUX"!==o)return e(null,{error:!1});r=s.getUserHome()+I[o]+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+".json",l.unlink(r,t=>t&&"ENOENT"!==t.code?(console.log("Error occurred while removing manifest: ",t),e(null,{error:!0,message:`Error occurred while removing manifest at "${r}", please remove it manually`})):(console.log("Manifest is removed successfully"),e(null,{error:!1})))},removeRegistryKey:function(e){if("WINDOWS"!==o)return e(null,{error:!1,message:"The current OS does not support registry key"});u.exec('REG DELETE "'+I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")+'.json" /f',(r,t,n)=>0!==r?(console.log(`Error occurred while removing ${I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")} key`),e(null,{error:!0,message:`Could not remove registry key "${I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")}", please remove it manually`})):(console.log(`Registry key ${I.WINDOWS+g("__WP_INTERCEPTOR_MANIFEST_FILENAME__")} is removed successfully`),e(null,{error:"false"})))},removeCorruptedDependency(e,r,t){l.unlink(r,n=>(n?console.log(`Error occurred while removing corrupted download at ${r} : ${n}`):console.log(`Removed corrupted download at ${r}`),t(e)))}}}};