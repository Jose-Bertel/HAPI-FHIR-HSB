exports.ids=["utils_enableTracing_js"],exports.modules={"./utils/enableTracing.js":function(e,r,t){let i=t("path");e.exports=class{constructor(e,r){if(!e||!r)throw Error(`
          Please provide electron dependencies while initializing Tracing
          const { app, contentTracing } = require('electron')
          new Tracing(app, contentTracing)
      `);this.recording=!1,this.contentTracing=r,this.app=e}startTracing(){return pm.logger.info("~Tracing~start: enabled"),this.recording=!0,this.contentTracing.startRecording({included_categories:["*"],excluded_categories:["disabled-by-default-v8.ic_stats","node.async_hooks"]}).then(async()=>{let e=function(){if(process.env.PERFORMANCE_TRACING_TIMEOUT){let e=Number(process.env.PERFORMANCE_TRACING_TIMEOUT);return Number.isInteger(e)&&e>0?e:1e4}return 1e4}();pm.logger.info("~Tracing~start: started. The performance tracing timeout is:",e),await new Promise(r=>setTimeout(r,e)),this.app.quittingApp||await this.stopTracing()})}isRecording(){return this.recording}async stopTracing(){var e;if(!this.recording)return;let r=(e=process.env.PERFORMANCE_TRACING_OUTPUT_PATH)?i.parse(e).ext?e:i.join(e,`tracing-${Date.now()}.json`):void 0;pm.logger.info("Tracing data will be recorded to "+r);try{let e=await this.contentTracing.stopRecording(r);pm.logger.info("Tracing data recorded to "+e)}catch(e){pm.logger.info("Error while writing tracing data",e)}this.recording=!1}}}};