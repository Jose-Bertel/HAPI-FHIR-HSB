exports.ids=["common_channels_LinkableChannel_js-common_services_VaultIntegrationService_js-common_utils_po-245fbc"],exports.modules={"./common/channels/LinkableChannel.js":function(e){let t=Symbol(),s=Symbol(),r=Symbol();class i{constructor(){this[t]=null,this[s]=[],this[r]=!1}emit(e,s){if("string"!=typeof e)throw TypeError("Expected event name to be a string");return!this[r]&&this[t]&&this[t].receive(e,s),this}receive(){throw TypeError("LinkableChannel receive() not implemented")}link(e){if(!(e instanceof i))throw TypeError("Expected link target to be a LinkableChannel");if(null!==this[t]||null!==e[t])throw TypeError("A channel link already exists");return e[t]=this,this[t]=e,(this[r]||e[r])&&(n(this),n(e)),this}destroy(){return n(this),this[t]&&n(this[t]),this}isDestroyed(){return this[r]}addCleanup(e){if("function"!=typeof e)throw TypeError("Expected disposer to be a function");return this[r]?setTimeout(e.bind(this),0):this[s].push(e),this}}function n(e){for(let t of e[s].splice(0))setTimeout(t.bind(e),0);e[r]=!0}e.exports=i},"./common/services/VaultIntegrationService.js":function(e,t,s){let{getConfig:r}=s("./services/AppConfigService.js"),i=s("./common/services/VaultScriptService.js"),{STS:n,SecretsManager:o,IAM:a}=s("./services/AWSService.js"),c=s("events"),l=s("./node_modules/lodash/lodash.js"),h=s("fs").promises,u=s("./node_modules/@azure/msal-node/lib/msal-node.cjs"),d="undefined"!=typeof navigator&&navigator.userAgent.includes("jsdom"),p=d?null:s("./node_modules/openid-client/lib/index.js"),f=s("./node_modules/@1password/sdk/dist/sdk.js"),g=s("./node_modules/postman-request/index.js"),m=s("http"),w=s("./node_modules/lru-cache/index.js"),v=s("./services/AWSConfigParserService.js"),y=pm.logger.getContext("vault-integration","product-trust"),S=d?"":r("__WP_VAULT_AUTH_REDIRECT_URL__"),_=d?"":r("__WP_VAULT_AZURE_APP_ID__"),I=d?[""]:["https://vault.azure.net/user_impersonation"];class C extends c.EventEmitter{constructor(e){super()}async init(){}async performLoginFlow(e,t){throw Error("Not implemented")}getUserInformation(){throw Error("Not implemented")}isAuthenticationActive(){let e=this.getUserInformation();return null!=e&&e.expiresOn>Date.now()}async isValidSecret(e){try{return await this._resolveSecretId(e,new AbortController().signal),!0}catch(e){if(e instanceof k)return!1;return pm.logger.error("VaultIntegrationService~isValidSecret",e,{context:y}),!1}}async _resolveSecretId(e,t){throw Error("Not implemented")}async resolveSecrets(e,t){throw Error("Not implemented")}isSupportedSecret(e){throw Error("Not implemented")}async logout(){throw Error("Not implemented")}resetCache(){throw Error("Not implemented")}updateCacheTtl(e){throw Error("Not implemented")}async handleLogin(e,t){let s=this.getUserInformation();if(s&&s.expiresOn>Date.now())return void e({event:"error",type:"user_already_authenticated",user:s});let r=N.global();r.isRunning()&&(e({event:"restarting_auth"}),await r.stop());try{let s=await this.performLoginFlow(t=>{e({event:"start_auth_flow",redirectUrl:t})},t);e({event:"login_completed",user:s})}catch(t){if(t instanceof V)return e({event:"error",type:"timeout"});if(t instanceof k)return e({event:"login_cancelled"});pm.logger.info("VaultIntegrationService~handleLogin",t,{context:y}),e({event:"error",type:"unexpected_error",context:l.get(t,"message")})}}isMatchingConfig(e){return!0}}class A extends C{static AUTHORITY="https://login.microsoftonline.com/common";static LOGIN_TIMEOUT=3e5;static PROVIDER_ID="azure-key-vault";static SUPPORTED_SECRET_VERSION="0.x";#e;#t=null;#s;#r=36e5;constructor(e){super(),this.redirectUri=new URL(S),this.clientId=_,this.scopes=I,e.caCertPath&&(this.caPath=e.caCertPath),e.isSSLCertificateDisabled&&(this.isSSLCertificateDisabled=e.isSSLCertificateDisabled);let t=(t,s,r)=>(e.caCertPath&&(s.caPath=e.caCertPath),e.isSSLCertificateDisabled&&(s.strictSSL=!e.isSSLCertificateDisabled),s.method=r,new Promise((e,r)=>{O(t,s).then(({response:t,body:s})=>{e({headers:t.headers,body:JSON.parse(s),status:t.statusCode})}).catch(e=>{r(e)})}));this.#e=new u.PublicClientApplication({auth:{clientId:_,authority:A.AUTHORITY},system:{networkClient:{sendGetRequestAsync:(e,s)=>t(e,s,"GET"),sendPostRequestAsync:(e,s)=>t(e,s,"POST")}}}),this.#s=new w({maxAge:this.#r,max:500}),this.reauthController=null}async performLoginFlow(e){let t=N.global();this.#s.reset();let{verifier:s,challenge:r}=await new u.CryptoProvider().generatePkceCodes(),i=await this.#e.getAuthCodeUrl({redirectUri:this.redirectUri.toString(),scopes:this.scopes,codeChallenge:r,codeChallengeMethod:"S256"});await t.stop(),await t.start(),e(i);let[n,o,a]=await t.waitForRequest(A.LOGIN_TIMEOUT),c=Object.fromEntries(n.searchParams.entries());try{this.#t=await this.#e.acquireTokenByCode({scopes:this.scopes,redirectUri:this.redirectUri.toString(),code:c.code,codeVerifier:s}),this._broadcastUserInfo(),await t.respond(a,200,q("Microsoft Azure","https://postman-static-getpostman-com.s3.amazonaws.com/assets/azure-light.png","https://postman-static-getpostman-com.s3.amazonaws.com/assets/azure-favicon.ico"))}catch(e){throw this._broadcastUserInfo(),await t.respond(a,500,"Something went wrong while authenticating. Please try again."),await t.stop(),e}return await t.stop(),this._startReAuthFlow(),D(this.getUserInformation())}getUserInformation(){return l.isNil(this.#t)?null:{userName:D(this.#t.account).username,expiresOn:D(this.#t.expiresOn).getTime()}}async logout(){if(l.isNil(this.#t))return void this._broadcastUserInfo();await this.#e.signOut({account:D(this.#t.account)}),this.#s.reset(),this.#t=null,this._stopReAuthFlow(),this._broadcastUserInfo()}isSupportedSecret(e){return this._isValidSecretId(e)}async resolveSecrets(e,t){this.emit("event",{event:"variable_resolution_started"});let s=e.map(e=>e.secretId),r=await this._resolveSecretIds(l.uniq(s),t),i=[];for(let t of e){let e=r[t.secretId];null==e[0]?i.push([t,{success:!0,value:e[1]}]):i.push([t,{success:!1,error:e[0]}])}return this.emit("event",{event:"variable_resolution_finished"}),i}async _resolveSecretIds(e,t){let s={};for(let r=0;r<e.length;r+=10)await Promise.all(e.slice(r,r+10).map(async e=>{if(t.aborted)throw new k;try{s[e]=[null,await this._resolveSecretId(e,t)]}catch(t){if(t instanceof k)throw t;s[e]=[t,null]}}));return s}async _resolveSecretId(e,t){if(!this._isValidSecretId(e))throw new F(e);if(!this.#s.has(e))try{let s=await this._fetchSecret(e,t);this.#s.set(e,[null,s])}catch(t){if("ABORT_ERR"==l.get(t,"code"))throw new k;if(t instanceof L&&401==t.statusCode)this.#s.set(e,[t,null],this.#r);else throw t}let s=D(this.#s.get(e));if(null!=s[0])throw s[0];if(!this._isSecretActive(s[1]))throw new U(e);return s[1].value}_isSecretActive(e){let t=e.attributes;return!(!t.enabled||t.exp&&t.exp<Date.now()/1e3||t.nbf&&t.nbf>Date.now()/1e3)}_isValidSecretId(e){try{let t=new URL(e),s=(t.pathname.match(/\//g)||[]).length;if("https:"!=t.protocol||!t.hostname.endsWith(".vault.azure.net")||!t.pathname.startsWith("/secrets/")||s>4)return!1;return!0}catch(e){return!1}}async _fetchSecret(e,t){let s=new URL(e);s.searchParams.set("api-version","7.4");let r={headers:this.#i(),abortSignal:t,json:!0};this.caPath&&(r.caPath=this.caPath),this.isSSLCertificateDisabled&&(r.strictSSL=!this.isSSLCertificateDisabled);let{response:i,body:n}=await O(s,r);if(200!=i.statusCode)throw new L("Can't fetch secret. Invalid status code in azure response.",i.statusCode);return n}#i(){if(this.isAuthenticationActive())return{Authorization:`Bearer ${D(this.#t).accessToken}`};throw new P}_stopReAuthFlow(){null!=this.reauthController&&(this.reauthController.abort(),this.reauthController=null)}_startReAuthFlow(){this._stopReAuthFlow();let e=new AbortController;this._continuouslyRefreshToken(e.signal),this.reauthController=e}async _continuouslyRefreshToken(e){pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - Starting",{context:y});let t=0;for(;;){if(e.aborted)return void pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - Aborted",{context:y});let s=this.getUserInformation();if(null==s)return void pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - User Logged out",{context:y});let r=Math.max(s.expiresOn-3e5-Date.now(),0);if(pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - Waiting until next expiry",{waitDuration:r,userInfo:s},{context:y}),await M(r),e.aborted)return void pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - Aborted",{context:y});try{this.#t=await this.#e.acquireTokenSilent({account:D(this.#t?.account),scopes:this.scopes}),this._broadcastUserInfo(),pm.logger.info("VaultIntegrationService~Azure.continouslyRefreshToken - Refreshed token successfully",{context:y}),t=0}catch(e){if(pm.logger.error("VaultIntegrationService~Azure.continuouslyRefreshToken - Failed to refresh token",e,{context:y}),e instanceof u.InteractionRequiredAuthError)return;t+=1,await M(Math.min(1e3*Math.pow(2,t),6e5))}}}_broadcastUserInfo(){this.emit("event",{event:"auth_update",user:this.getUserInformation()})}resetCache(){this.#s.reset()}updateCacheTtl(e){return this.resetCache(),this.#r=e,this.#s=new w({maxAge:this.#r,max:500}),!0}}class T extends C{static LOGIN_TIMEOUT=3e5;static PROVIDER_ID="hashicorp-vault";static SUPPORTED_SECRET_VERSION="0.x";static DELIMITER=":@:@:";static DEFAULTS={ENGINE_VERSION:"2"};static ALLOWED_SECRET_VALUE_PARTS_LENGTH=[3,4];#s;#r=36e5;#n;constructor(e){super(e),this.redirectUri=new URL(S),this.discoveryUrl=e.discoveryUrl,this.scopes=(e.scopes||"")+" openid",this.namespace=e.namespace,this.clientId=e.clientId,this.role=e.role,this.jwtAuthPath=e.jwtAuthPath,this.vaultEndpoint=new URL(this.discoveryUrl).origin,this.loginEndpoint=this.vaultEndpoint+`/v1/auth/${e.jwtAuthPath}/login`,this.caPath,this.#n=null,this.#s=new w({maxAge:this.#r,max:500}),this.reauthController=null}fixAgentBasePatch(){let e="__postman_vault_https_request_patch_fix_",t=s("https"),r=s("node:url");if(t.request.__agent_base_https_request_patched__&&!t.request[e]){var i;i=t.request,t.request=function(e,s,n){let o="string"==typeof e||e instanceof URL,a=o?s:e,c={};return l.startsWith(l.get(a,"headers.User-Agent"),"openid-client")?(o?("string"==typeof e&&(e=new URL(e)),l.assign(c,r.urlToHttpOptions(e)),l.assign(c,s)):(c=a,n=s),i.call(t,c,n)):i.call(t,e,s,n)},t.request[e]=!0}}async init(e){this.fixAgentBasePatch();let t=e;if(t){let e=s("os").platform();this.caPath=t,"win32"===e&&(t=s("path").normalize(t.slice(1))),this.caPath=t,p.custom.setHttpOptionsDefaults({ca:s("fs").readFileSync(t)})}this.issuer=await p.Issuer.discover(this.discoveryUrl),this.client=new this.issuer.Client({client_id:this.clientId,redirect_uris:[this.redirectUri.toString()],response_types:["code"],token_endpoint_auth_method:"none"})}async performLoginFlow(e){let t=N.global(),s,r,i,n,o,a,c,l=this.caPath;l&&pm.logger.info("VaultIntegrationService~Hashicorp.performLoginFlow - Using caPath: ",l,{context:y}),this.#s.reset();try{r=p.generators.codeVerifier(),s=p.generators.codeChallenge(r)}catch(e){throw pm.logger.error("VaultIntegrationService~Hashicorp.performLoginFlow - Failed to generate code verifier and challenge",e,{context:y}),e}try{n=(i=this._getClient()).authorizationUrl({code_challenge:s,code_challenge_method:"S256",scope:this.scopes})}catch(e){throw pm.logger.error("VaultIntegrationService~Hashicorp.performLoginFlow - Failed to generate authorization URL",e,{context:y}),e}await t.stop(),await t.start(),e(n);try{[o,a,c]=await t.waitForRequest(T.LOGIN_TIMEOUT)}catch(e){throw pm.logger.error("VaultIntegrationService~Hashicorp.performLoginFlow - Failed to wait for request",e,{context:y}),e}try{let e=i.callbackParams(o.toString()),s=Date.now(),n=await i.callback(this.redirectUri.toString(),e,{code_verifier:r,scope:this.scopes}),a={token:D(n.id_token),expiresOn:s+1e3*D(n.expires_in)};this.#n=await this.loginUsingJWT(a,l),this._broadcastUserInfo(),await t.respond(c,200,q("","https://postman-static-getpostman-com.s3.amazonaws.com/assets/HashiCorp_Vault_PrimaryLogo.png","https://postman-static-getpostman-com.s3.amazonaws.com/assets/hashicorp-favicon.ico"))}catch(e){throw this._broadcastUserInfo(),pm.logger.error("VaultIntegrationService~Hashicorp.performLoginFlow - Failed to login using JWT",e,{context:y}),await t.respond(c,500,"Something went wrong while authenticating. Please try again."),await t.stop(),e}return await t.stop(),this._startReAuthFlow(),D(this.getUserInformation())}getUserInformation(){return null===this.#n?null:{expiresOn:this.#n.expiresOn}}async logout(){if(null===this.#n)return void this._broadcastUserInfo();this.#n=null,this.#s.reset(),this._broadcastUserInfo()}isSupportedSecret(e){if(!e||"string"!=typeof e)return!1;let t=e.split(T.DELIMITER);return!!T.ALLOWED_SECRET_VALUE_PARTS_LENGTH.includes(t.length)}_parseSecret(e){if(!("secretId"in e))return e;{let t=e.secretId.split(T.DELIMITER);return{...e,secretEngine:t[0],secretPath:t[1],secretKey:t[2],secretEngineVersion:4===t.length?t[3]:T.DEFAULTS.ENGINE_VERSION}}}async resolveSecrets(e,t){if(!e.length)return[];this.emit("event",{event:"variable_resolution_started"}),e=e.map(e=>this._parseSecret({provider:e.vaultId,version:"0.x",secretId:e.secretId}));let s=await this._resolveSecretIds(l.uniqBy(e,e=>this._secretToString(e)),t),r=[];for(let t of e){let e=D(s.get(t));null==e[0]?r.push([t,{success:!0,value:e[1]}]):r.push([t,{success:!1,error:e[0]}])}return this.emit("event",{event:"variable_resolution_finished"}),r}async _resolveSecretIds(e,t){let s=new j(e=>this._secretToString(e));for(let r=0;r<e.length;r+=10)await Promise.all(e.slice(r,r+10).map(async e=>{if(t.aborted)throw new k;try{s.set(e,[null,await this._resolveSecretId(e,t)])}catch(t){if(t instanceof k)throw t;s.set(e,[t,null])}}));return s}async _resolveSecretId(e,t){if(this._isValidSecretId(e))throw new F(e);let s=this._getCacheKey(e);if(!this.#s.has(s))try{let r=await this._fetchSecret(e,t);this.#s.set(s,[null,r])}catch(e){if("ABORT_ERR"==l.get(e,"code"))throw new k;if(e instanceof L&&401==e.statusCode)this.#s.set(s,[e,null],this.#r);else throw e}let r=D(this.#s.get(s));if(null!=r[0])throw r[0];if(e.secretKey in r[1].value)return r[1].value[e.secretKey];throw new F(e)}_isValidSecretId(e){return e?.secretEngine===""&&e?.secretPath===""}_secretToString(e){return[e.secretEngine,e.secretPath,e.secretKey,e.secretEngineVersion].join("/")}_getCacheKey(e){return[e.secretEngine,e.secretPath,e.secretEngineVersion].join("/")}_isVersion1SecretEngine(e){return"1"===e.secretEngineVersion}async _fetchSecret(e,t){let s=new URL(this.vaultEndpoint);this._isVersion1SecretEngine(e)?s.pathname=`/v1/${e.secretEngine}/${e.secretPath}`:s.pathname=`/v1/${e.secretEngine}/data/${e.secretPath}`;let r={...this.#i(),...this._namespaceHeaders()},{response:i,body:n}=await O(s,{headers:r,abortSignal:t,json:!0,caPath:this.caPath});if(200!=i.statusCode)throw new L("Can't fetch secret. Invalid status code in hashicorp resopnse.",i.statusCode);return{value:this._isVersion1SecretEngine(e)?n.data:n.data.data}}#i(){if(this.isAuthenticationActive())return{"X-Vault-Token":D(this.#n).token};throw new P}_broadcastUserInfo(){this.emit("event",{event:"auth_update",user:this.getUserInformation()})}_namespaceHeaders(){return null!=this.namespace?{"X-Vault-Namespace":this.namespace}:{}}_getClient(){if(null==this.client)throw Error("Vault init() not called before access.");return this.client}_stopReAuthFlow(){null!=this.reauthController&&(this.reauthController.abort(),this.reauthController=null)}_startReAuthFlow(){this._stopReAuthFlow();let e=new AbortController;this._continuouslyRefreshToken(e.signal),this.reauthController=e}async loginUsingJWT(e,t){let s=new Date,{response:r,body:i}=await O(this.loginEndpoint,{method:"POST",headers:this._namespaceHeaders(),body:{jwt:e.token,role:this.role},caPath:t,json:!0});if(20!=Math.floor(r.statusCode/10))throw new L("Can't exchange jwt for accessToken",r.statusCode);return{token:i.auth.client_token,expiresOn:s.getTime()+1e3*i.auth.lease_duration,jwt:e}}async _continuouslyRefreshToken(e){pm.logger.info("VaultIntegrationService~Hashicorp.continouslyRefreshToken - Starting",{context:y});let t=0;for(;;){if(e.aborted)return void pm.logger.info("VaultIntegrationService~Hashicorp.continouslyRefreshToken - Aborted",{context:y});let s=this.getUserInformation();if(null==s)return void pm.logger.info("VaultIntegrationService~Hashicorp.continouslyRefreshToken - User Logged out",{context:y});let r=Math.max(s.expiresOn-3e5-Date.now(),0);if(r>864e5&&(r=864e5),await M(r),e.aborted)return void pm.logger.info("VaultIntegrationService~Hashicorp.continouslyRefreshToken - Aborted",{context:y});try{this.#n=await this.loginUsingJWT(D(this.#n).jwt),this._broadcastUserInfo(),t=0}catch(e){pm.logger.info("VaultIntegrationService~Hashicorp.continouslyRefreshToken - Error while refreshing token",e,{context:y}),t+=1,await M(Math.min(Math.pow(2,t),72e5))}}}resetCache(){this.#s.reset()}updateCacheTtl(e){return this.resetCache(),this.#r=e,this.#s=new w({maxAge:this.#r,max:500}),!0}isMatchingConfig(e){return e?.discoveryUrl==this.discoveryUrl&&e?.jwtAuthPath==this.jwtAuthPath&&e?.clientId==this.clientId&&e?.role==this.role&&e?.scopes==this.scopes&&e?.namespace==this.namespace}}class R extends C{static PROVIDER_ID="aws-secrets-manager";static LOGGED_IN_DURATION=7200;#s;#o;#r=36e5;constructor(){super(),this.#s=new w({maxAge:this.#r,max:500}),this.reauthController=null}async validateAndSaveTempCred(e){try{if(!e?.awsAccessKey||!e?.awsSecretKey||!e.sessionToken)return{success:!1};let t=new n({apiVersion:"2011-06-15",accessKeyId:e.awsAccessKey,secretAccessKey:e.awsSecretKey,sessionToken:e.sessionToken});return await new Promise((e,s)=>{t.getCallerIdentity({},function(t,r){t?s("Unable to validate session token"):e(r)})}),this.#o={accessKeyId:e.awsAccessKey,secretAccessKey:e.awsSecretKey,sessionToken:e.sessionToken,region:e.region,expiresOn:Number.MAX_SAFE_INTEGER},this._broadcastUserInfo(),{success:!0}}catch(e){throw this._broadcastUserInfo(),e}}async fetchAndSaveTempCred(e){try{if(!e?.awsAccessKey||!e?.awsSecretKey)return{success:!1};let t=new n({apiVersion:"2011-06-15",accessKeyId:e.awsAccessKey,secretAccessKey:e.awsSecretKey}),s=await new Promise((s,r)=>{t.getSessionToken({DurationSeconds:R.LOGGED_IN_DURATION,SerialNumber:e.mfaSerialNumber,TokenCode:e.mfaTokenCode},function(e,t){e?r("Unable to get session token"):s(t)})});return this.#o={accessKeyId:s.Credentials.AccessKeyId,secretAccessKey:s.Credentials.SecretAccessKey,sessionToken:s.Credentials.SessionToken,region:e.region,expiresOn:new Date(s.Credentials.Expiration).getTime()},this._broadcastUserInfo(),{success:!0}}catch(e){throw this._broadcastUserInfo(),e}}async performLoginFlow(e,t){return"root"===t.credentialsType?await this.fetchAndSaveTempCred(t):await this.validateAndSaveTempCred(t)}getUserInformation(){return l.isNil(this.#o)?null:{expiresOn:D(this.#o.expiresOn)}}async fetchAWSConfig(){let e=await h.readFile(v.getAWSCredentialsPath(),"utf8"),t=v.parseCredentailsFile(e),s=t?.main||t?.default;return{awsAccessKey:s.aws_access_key_id,awsSecretKey:s.aws_secret_access_key}}async fetchMFAConfig(e){return e&&e.awsAccessKey&&e.awsSecretKey?await new Promise((t,s)=>{new a({apiVersion:"2010-05-08",accessKeyId:e.awsAccessKey,secretAccessKey:e.awsSecretKey}).listMFADevices({},function(e,r){return e?e?.type==="Sender"&&"NoSuchEntity"===e.code?t({data:[]}):(pm.logger.error("VaultIntegrationService~AWSSecretsManager.fetchMFAConfig",e,{context:y}),s("Unable to fetch user mfa details")):t({data:r.MFADevices})})}):{error:"Missing data"}}async logout(){if(l.isNil(this.#o))return void this._broadcastUserInfo();this.#o=null,this.#s.reset(),this._stopReAuthFlow(),this._broadcastUserInfo()}isSupportedSecret(e){return this._isValidSecretId(e)}getUniqueSecretIdentifier(e){return`${e.secretId}-${e.version}-${e.secretKey}`}async resolveSecrets(e,t){this.emit("event",{event:"variable_resolution_started"});let s=await this._resolveSecretIds(l.uniqBy(e,this.getUniqueSecretIdentifier),t),r=[];for(let t of e){let e=s[this.getUniqueSecretIdentifier(t)];null==e[0]?r.push([t,{success:!0,value:e[1]}]):r.push([t,{success:!1,error:e[0]}])}return this.emit("event",{event:"variable_resolution_finished"}),r}async _resolveSecretIds(e,t){let s={};for(let r=0;r<e.length;r+=10)await Promise.all(e.slice(r,r+10).map(async e=>{let r=this.getUniqueSecretIdentifier(e);if(t.aborted)throw new k;try{s[r]=[null,await this._resolveSecretId(e,t)]}catch(e){if(e instanceof k)throw e;s[r]=[e,null]}}));return s}async _resolveSecretId(e,t){if(!this._isValidSecretId(e.secretId))throw new F(e.secretId);if(!this._isValidRole(e.assumedRole))throw new K(e.assumedRole);let s=this.getUniqueSecretIdentifier(e);if(!this.#s.has(s))try{let r=await this._fetchSecret(e,t);this.#s.set(s,[null,r])}catch(e){if("ABORT_ERR"==l.get(e,"code"))throw new k;if(e instanceof L&&401==e.statusCode)this.#s.set(s,[e,null],this.#r);else throw e}let r=D(this.#s.get(s));if(null!=r[0])throw r[0];if(!this._isSecretActive(r[1]))throw new U(e.secretId);return r[1].value}_isSecretActive(e){return!0}_isValidSecretId(e){return"string"==typeof e&&!!e}_isValidRole(e){return!e||"string"==typeof e&&!!e.startsWith("arn:")}async _fetchSecret(e,t){if(!this.#o)throw Error("Not logged into vault");let s={accessKeyId:this.#o.accessKeyId,secretAccessKey:this.#o.secretAccessKey,sessionToken:this.#o.sessionToken};if(e.assumedRole&&""!=e.assumedRole){let t=new n({apiVersion:"2011-06-15",accessKeyId:s.accessKeyId,secretAccessKey:s.secretAccessKey,sessionToken:s.sessionToken}),r=await new Promise((s,r)=>{t.assumeRole({DurationSeconds:3600,RoleArn:e.assumedRole,RoleSessionName:"postman-vault"},function(e,t){e?r(e):s(t)})});s.accessKeyId=r.Credentials.AccessKeyId,s.secretAccessKey=r.Credentials.SecretAccessKey,s.sessionToken=r.Credentials.SessionToken}let r=new o({apiVersion:"2017-10-17",region:this.#o.region,accessKeyId:s.accessKeyId,secretAccessKey:s.secretAccessKey,sessionToken:s.sessionToken}),i=await new Promise((t,s)=>{r.getSecretValue({SecretId:e.secretId,...e.version?{VersionId:e.version}:{}},function(e,r){e?s(e):t(r)})});return"KeyValue"===e.secretType&&e.secretKey?{value:JSON.parse(i.SecretString)[e.secretKey],id:e.secretId,version:e.version}:{value:i.SecretString,id:e.secretId,version:e.version}}_stopReAuthFlow(){}_startReAuthFlow(){}async _continuouslyRefreshToken(e){console.log("NOT IMPLEMENTED")}_broadcastUserInfo(){this.emit("event",{event:"auth_update",user:this.getUserInformation()})}resetCache(){this.#s.reset()}updateCacheTtl(e){return this.resetCache(),this.#r=e,this.#s=new w({maxAge:this.#r,max:500}),!0}}class b extends C{static PROVIDER_ID="one-password";#s;#o;#r=36e5;constructor(){super(),this.#s=new w({maxAge:this.#r,max:500}),this.reauthController=null}async performLoginFlow(e,t){try{if(!t?.serviceToken||!t.serviceToken.startsWith("ops_"))return{success:!1};let e=await f.createClient({auth:t.serviceToken,integrationName:"Postman",integrationVersion:"beta"});return this.#o={serviceToken:t.serviceToken,client:e},this._broadcastUserInfo(),{success:!0}}catch(e){throw console.log(e),this._broadcastUserInfo(),e}}getUserInformation(){return l.isNil(this.#o)?null:{expiresOn:Number.MAX_SAFE_INTEGER}}async logout(){if(l.isNil(this.#o))return void this._broadcastUserInfo();this.#o=null,this.#s.reset(),this._broadcastUserInfo()}isSupportedSecret(e){return this._isValidSecretId(e)}getUniqueSecretIdentifier(e){return e.secretId}async resolveSecrets(e,t){this.emit("event",{event:"variable_resolution_started"});let s=await this._resolveSecretIds(l.uniqBy(e,this.getUniqueSecretIdentifier),t),r=[];for(let t of e){let e=s[this.getUniqueSecretIdentifier(t)];null==e[0]?r.push([t,{success:!0,value:e[1]}]):r.push([t,{success:!1,error:e[0]}])}return this.emit("event",{event:"variable_resolution_finished"}),r}async _resolveSecretIds(e,t){let s={};for(let r=0;r<e.length;r+=10)await Promise.all(e.slice(r,r+10).map(async e=>{let r=this.getUniqueSecretIdentifier(e);if(t.aborted)throw new k;try{s[r]=[null,await this._resolveSecretId(e,t)]}catch(e){if(e instanceof k)throw e;s[r]=[e,null]}}));return s}async _resolveSecretId(e,t){if(!this._isValidSecretId(e.secretId))throw new F(e.secretId);let s=this.getUniqueSecretIdentifier(e);if(!this.#s.has(s))try{let r=await this._fetchSecret(e,t);this.#s.set(s,[null,r])}catch(e){if("ABORT_ERR"==l.get(e,"code"))throw new k;if(e instanceof L&&401==e.statusCode)this.#s.set(s,[e,null],this.#r);else throw e}let r=D(this.#s.get(s));if(null!=r[0])throw r[0];if(!this._isSecretActive(r[1]))throw new U(e.secretId);return r[1].value}_isSecretActive(e){return!0}_isValidSecretId(e){try{if("string"!=typeof e||!e)return!1;let[t,s]=e.split("://");if("op"!=t)return!1;let r=s.split("/");if(![3,4].includes(r.length))return!1;return!0}catch(e){return console.log(e),!1}}async _fetchSecret(e,t){if(!this.#o)throw Error("Not logged into vault");let s=this.#o.client;return{value:await s.secrets.resolve(e.secretId),id:e.secretId}}_stopReAuthFlow(){throw Error("1Password does not need re-auth")}_startReAuthFlow(){throw Error("1Password does not need re-auth")}async _continuouslyRefreshToken(e){throw Error("1Password does not need refreshing tokens")}_broadcastUserInfo(){this.emit("event",{event:"auth_update",user:this.getUserInformation()})}resetCache(){this.#s.reset()}updateCacheTtl(e){return this.resetCache(),this.#r=e,this.#s=new w({maxAge:this.#r,max:500}),!0}}class E{constructor(){this.vaultIntegrationManager=null,this.vaultScriptManager=null}getOrInitVaultIntegrationManager(){return this.vaultIntegrationManager||(this.vaultIntegrationManager=new E.VaultIntegrationManager),this.vaultIntegrationManager}getOrInitVaultScriptManager(){return this.vaultScriptManager||(this.vaultScriptManager=new i),this.vaultScriptManager}isIntegrationManagerInitialized(){return null!==this.vaultIntegrationManager}isScriptManagerInitialized(){return null!==this.vaultScriptManager}createVault(e,t){return this.getOrInitVaultIntegrationManager().createVault(e,t)}getVault(e){return this.getOrInitVaultIntegrationManager().getVault(e)}isSupportedSecret(e,t){return this.getOrInitVaultIntegrationManager().isSupportedSecret(e,t)}resolveSecrets(e,t){return this.getOrInitVaultIntegrationManager().resolveSecrets(e,t)}resolveAction(e,t){return this.getOrInitVaultScriptManager().resolveAction(e,t)}storeActionCallback(e,t){return this.getOrInitVaultScriptManager().storeActionCallback(e,t)}setEventEmitter(e,t){return this.getOrInitVaultScriptManager().setEventEmitter(e,t)}emit(e){return this.getOrInitVaultScriptManager().emit(e)}}E.VaultIntegrationManager=class e{static types=[A,T,R,b];constructor(){this.initialized={}}getVault(e){return this.initialized[e]?this.initialized[e]:null}isSupportedSecret(e,t){let s=this.getVault(t);return!!s?.isSupportedSecret(e)}async resolveSecrets(e,t){let s={},r={};Object.keys(this.initialized).forEach(e=>{s[e]=[],r[e]=[]});let i=[];for(let[n,o]of(e.forEach((e,t)=>{for(let[n,o]of(i.push(null),Object.entries(this.initialized)))if(n===e.vaultId&&o.isSupportedSecret(e.secretId)){s[e.vaultId].push(e),r[e.vaultId].push(t);break}}),Object.entries(this.initialized)))s[n]&&(await o.resolveSecrets(s[n],t)).forEach((e,t)=>{i[r[n][t]]=e});return i}async createVault(t,s){if(this.initialized[t]&&this.initialized[t]?.isMatchingConfig(s))return this.initialized[t];let r=null;for(let i of(s&&s.caCertPath&&(r=s.caCertPath),e.types))if(i.PROVIDER_ID==t){let e=new i(s);return await e.init(r),this.initialized[t]=e,e}throw Error("Unknown vault type")}destroyVault(e){delete this.initialized[e]}};class x extends Error{}class k extends Error{}class U extends x{constructor(e){super(`Secret is not active: ${e}`)}}class V extends x{constructor(){super("Authentication timed out")}}class P extends x{constructor(){super("Vault is not authenticated")}}class F extends x{constructor(e){super(`Invalid secret key: ${e}`)}}class K extends x{constructor(e){super(`Invalid role: ${e}`)}}class L extends x{constructor(e,t){super(e),this.statusCode=t}}async function O(e,t){if(t.abortSignal&&t.abortSignal.aborted)throw new k;let[r,i,n]=z(),o=!1;t.caPath&&(t.ca=s("fs").readFileSync(t.caPath));let a=g(e,t,(e,t,s)=>{if(!o){if(o=!0,e)return n(e);i({response:t,body:s})}});return t.abortSignal&&t.abortSignal.addEventListener("abort",e=>{o||(o=!0,a.abort(),n(e))}),await r}async function M(e){await new Promise(t=>setTimeout(t,e))}function z(){let e,t;return[new Promise((s,r)=>{e=s,t=r}),e,t]}function D(e){if(null==e)throw Error("Unexpected null value");return e}class N{static _globalServer=null;constructor(e,t){this.port=e,this.host=t,this.handler=null,this.server=m.createServer((e,t)=>{this.handler&&this.handler(e,t)})}isRunning(){return this.server.listening}async stop(){if(!this.server.listening)return;let[e,t,s]=z();this.server.on("close",()=>{t()}),this.server.close(),await new Promise(e=>setTimeout(e,500)),await e,this.server.removeAllListeners("error")}async start(){let[e,t,s]=z();this.server.on("error",e=>{this.server.removeAllListeners(),s(e)}),this.server.listen(this.port,this.host,()=>{t()}),await e}async waitForRequest(e){if(null!==this.handler)throw Error("Handler is already attached");let[t,s,r]=z(),i=!1,n=()=>{i||(this.handler=null,r(new k),i=!0)},o=(e,t)=>{i||(this.server.removeListener("close",n),this.handler=null,s([new URL(e.url,`http://${this.host}:${this.port}`),e,t]),i=!0)};return this.server.on("close",n),this.handler=o,setTimeout(()=>{i||(i=!0,r(new V))},e),await t}async respond(e,t,s,r){let[i,n,o]=z();if(e.on("error",o),e.on("finish",n),r)for(let t in Object.entries(r))e.setHeader(t[0],t[1]);let[a,c,l]=z();e.write(s,e=>{if(e)return l(e);c()}),await a,e.statusCode=t,e.end(),await i}static global(){if(null==N._globalServer){let e=new URL(S);N._globalServer=new N(Number(e.port),e.hostname)}return N._globalServer}}class j extends Map{constructor(e){super(),this.transform=e}set(e,t){return super.set(this.transform(e),t),this}get(e){return super.get(this.transform(e))}delete(e){return super.delete(this.transform(e))}hash(e){return super.has(this.transform(e))}}function q(e,t,s){return`
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <link rel="shortcut icon" href="${s}">
      <link href="https://fonts.googleapis.com/css?family=Inter:400italic,600italic,700italic,400,600,700" rel="stylesheet" type="text/css">
      <meta name="viewport" content="width=320, initial-scale=1, maximum-scale=1, user-scalable=no">
      <title>Authorize application</title>
      <style>
      .authorization-container {
        text-align: center;
        margin-top: 100px;
      }

      .authorization-header--logo {
        width: 200px;
      }

      .authorization-header--title {
        font-family: Inter;
        font-style: normal;
        font-weight: bold;
        font-size: 18px;
        line-height: 32px;
        margin: 0px;
      }

      .authorization-content--success-icon {
        display: inline;
        margin: 0 auto;
      }

      .authorization-content--title {
        color: #007F31;
        display: inline;
        font-family: Inter;
        font-style: normal;
        font-weight: bold;
        font-size: 16px;
        line-height: 28px;
      }

      .authorization-content--message {
        font-family: Inter;
        font-style: normal;
        font-weight: normal;
        font-size: 14px;
        line-height: 24px;
      }

      .authorization-content--success-icon--svg {
        position: relative;
        top: 1px;
      }

      .authorization-content--error-icon {
        display: inline;
      }

      .authorization-content--error-title {
        color: #B70700;
        display: inline;
        font-family: Inter;
        font-style: normal;
        font-weight: bold;
        font-size: 16px;
        line-height: 28px;
      }

      .authorization-content--error-message {
        font-family: Inter;
        font-style: normal;
        font-weight: normal;
        font-size: 14px;
        line-height: 24px;
      }

      .authorizarion-content--contact {
        display: block;
        color: #D23F0E;
        margin-top: 16px;
        font-family: Inter;
        font-style: normal;
        font-weight: 600;
        font-size: 12px;
        line-height: 16px;
        text-decoration: none;
      }

      .authorization-content--error-icon--svg {
        position: relative;
        top: 1px;
      }


      .pm-container {
        text-align: center;
        margin-top: 100px;
      }

      .pm-header--logo {
        width: 48px;
        height: 48px;
      }

      .pm-header--title {
        margin-top: 16px;
        font-family: Inter;
        font-weight: 600;
        font-size: 16px;
        line-height: 20px;
        color: #212121;
      }

      .pm-content {
        margin-top: 16px;
      }

      .pm-content--redirect-info {
        font-family: Inter;
        font-weight: normal;
        font-size: 14px;
        line-height: 22px;
        color: #212121;
      }

      .pm-content--user-info {
        margin-top: 12px;
        font-family: Inter;
        font-weight: normal;
        font-size: 14px;
        line-height: 22px;
        color: #6B6B6B;
      }

      .pm-footer {
        margin-top: 16px;
      }

      .pm-footer--continue-button{
        color: #FFFFFF;
        background-color: #FF6C37;
        border-radius: 3px;
        padding: 8px 12px;
        border: none;
        outline: none;
        cursor: pointer;
        font-family: Inter;
        font-size: 12px;
        font-style: normal;
        font-weight: 600;
        line-height: 16px;
        letter-spacing: 0px;
        text-align: left;
      }
      </style>
    </head>
    <body style="text-align: 'center'">
      <div class="authorization-container">
        <div class='authorization-header'>
          <div class="authorization-header">
            <img src="${t}" class="authorization-header--logo">
          </div>
          <h2 class='authorization-header--title'>
            ${e}
          </h2>
        </div>
        <div class="authorization-content">
          <div class="authorization-content--success-icon">
            <svg class="authorization-content--success-icon--svg" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M11.6465 5.14642L7.00004 9.79287L4.35359 7.14642L3.64648 7.85353L7.00004 11.2071L12.3536 5.85353L11.6465 5.14642Z" fill="#007F31"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z" fill="#007F31"/>
            </svg>
          </div>
          <h3 class="authorization-content--title">You&#39;re authorized</h3>
          <div class="authorization-content--message">You can close this tab and continue in Postman</div>
        </div>
      </div>
    </body>
  </html>
  `}e.exports={VaultManager:E,VaultAuthTimeoutError:V,VaultInvalidSecretKey:F,VaultInvalidRole:K,VaultNotAuthenticatedError:P,VaultInvalidProviderResponse:L,AbortError:k,TemporaryWebServer:N}},"./common/services/VaultScriptService.js":function(e){e.exports=class{constructor(){this.actionCallbacks=new Map,this._eventEmitter=null}setEventEmitter(e,t){this._eventEmitter={emit:s=>{e?e(t,s):pm.logger.error("No event emitter available for vault event emission")}}}resolveAction(e,t){let s=this.actionCallbacks.get(e);s&&(s(t),this.actionCallbacks.delete(e))}storeActionCallback(e,t){this.actionCallbacks.set(e,t)}emit(e){this._eventEmitter?this._eventEmitter.emit(e):pm.logger.warn("No event emitter available for vault event emission")}}},"./common/utils/pathIsInside.js":function(e,t,s){let r=s("path"),i=e=>e[e.length-1]===r.sep?e.slice(0,-1):e;e.exports=function(e,t){return e=i(e),t=i(t),"win32"===global.process.platform&&(e=e.toLowerCase(),t=t.toLowerCase()),0===e.lastIndexOf(t,0)&&(e[t.length]===r.sep||void 0===e[t.length])}},"./common/utils/postmanFs.js":function(e,t,s){let r=s("fs"),i=s("path"),n=s("stream").Readable,o=s("util"),a=s("./common/utils/pathIsInside.js"),{isBrowser:c}=s("./common/utils/processUtils.js"),l="PPERM: insecure file access outside working directory",h=new Map,u=function(e){let t=e.charAt(1);return"/"===e.charAt(0)&&(t>="A"&&t<="Z"||t>="a"&&t<="z")&&":"===e.charAt(2)||"///"===e.slice(0,3)};function d(e,t=!1,s=[],n=!0){this._fs=r,this._path=i,this.constants=this._fs.constants,this.workingDir=e,this.insecureFileRead=t,this.fileWhitelist=s,this.allowRemoteFile=n,this.isWindows=!c()&&"win32"===global.process.platform}d.prototype._resolve=function(e,t,s=[]){this.isWindows&&u(e)&&(e=e.substring(1));let r=this._path.resolve(this.workingDir,e);if(t||a(r,this.workingDir)||s.includes(r))return r},d.prototype.resolvePath=function(e,t,s){s||"function"!=typeof t||(s=t,t=[]);let r=this._resolve(e,this.insecureFileRead,this.fileWhitelist.concat(t));return r?s(null,r):s(Error(l))},d.prototype.resolvePathSync=function(e,t){let s=this._resolve(e,this.insecureFileRead,this.fileWhitelist.concat(t));if(!s)throw Error(l);return s},Object.getOwnPropertyNames(r).map(e=>{"SyncWriteStream"!==e&&"promises"!==e&&"function"==typeof r[e]&&(d.prototype[e]=r[e])}),d.prototype._isFileRemote=function(e){return e.includes("postman-cloud:///")},d.prototype.stat=function(e,t){if(this._isFileRemote(e)){if(!this.allowRemoteFile)return t(Error("Cloud file fetch failed, Cloud files not supported with performance testing"));let s=pm.eventBus.channel("remote-file-ipc-event").subscribe(r=>{let{name:i,data:n}=r??{};if("remote-file-fetch-failed"===i)return s(),t(Error("Cloud file fetch failed"));"remote-file-fetch-completed"===i&&(s(),this.resolvePath(n.filePath,(s,r)=>(h.set(e,r),s?t(s):this._fs.stat(r,t))))});return void pm.eventBus.channel("remote-file-ipc-event").publish({name:"remote-file-fetch-start",data:{filePath:e}})}this.resolvePath(e,(e,s)=>e?t(e):this._fs.stat(s,t))},d.prototype.createReadStream=function(e,t){try{let s=e;return this.allowRemoteFile&&this._isFileRemote(e)&&h.has(e)&&(s=h.get(e)),this._fs.createReadStream(this.resolvePathSync(s),t)}catch(s){let e=function(){n.call(this,{emitClose:!1}),this.emit("error",Error(l)),t&&!t.autoClose||this.destroy()};return o.inherits(e,n),new e}},d.prototype.readFile=function(e,...t){let s=this._resolve(e,!0);return this._fs.readFile(s,...t)},e.exports=d},"./node_modules/@1password/sdk-core/nodejs sync recursive":function(e){function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id="./node_modules/@1password/sdk-core/nodejs sync recursive",e.exports=t},"./services/AWSConfigParserService.js":function(e,t,s){let r=s("path"),i=s("os"),n=/\[(.*)\]/,o=/(.*)=(.*)/;e.exports={parseCredentailsFile:e=>{let t={},s=e.split("\n").filter(e=>""!==e),r=null;return s.forEach(e=>{if(n.exec(e)){t[r=n.exec(e)[1]]={};return}let s=e.replaceAll(" ",""),i=o.exec(s);if(3!=i.length)throw Error("Unknown line format");let a=i[1],c=i[2];t[r][a]=c}),t},getAWSCredentialsPath:e=>{e||(e=r.join(".aws","credentials"));let t=i.homedir();return r.join(t,".aws/credentials")}}},"./services/AWSService.js":function(e,t,s){let r=s("./node_modules/postman-request/index.js"),{XMLParser:i}=s("./node_modules/fast-xml-parser/src/fxp.js"),n=s("./node_modules/aws4/aws4.js"),o=e=>"/?"+Object.entries(e).map(([e,t])=>`${e}=${t}`).join("&");class a{static STS_URL="https://sts.amazonaws.com";constructor(e){this.apiVersion=e.apiVersion,this.accessKeyId=e.accessKeyId,this.secretAccessKey=e.secretAccessKey,this.sessionToken=e.sessionToken}getSessionToken(e,t){let s=o({Version:this.apiVersion,Action:"GetSessionToken",DurationSeconds:e.DurationSeconds,...e.SerialNumber&&{SerialNumber:e.SerialNumber},...e.TokenCode&&{TokenCode:e.TokenCode}}),c={accessKeyId:this.accessKeyId,secretAccessKey:this.secretAccessKey},l=n.sign({service:"sts",path:s},c);r({method:"GET",url:`${a.STS_URL}${s}`,...l},function(e,s){if(e)return t(e);try{let e=new i().parse(s.body);if(e.ErrorResponse)return t("Failed to get temporary credentials");return t(null,e?.GetSessionTokenResponse?.GetSessionTokenResult)}catch(e){return t(e)}})}assumeRole(e,t){let s=o({Version:this.apiVersion,Action:"AssumeRole",DurationSeconds:e.DurationSeconds,RoleArn:e.RoleArn,RoleSessionName:e.RoleSessionName,...e.SerialNumber&&{SerialNumber:e.SerialNumber},...e.TokenCode&&{TokenCode:e.TokenCode}}),c={accessKeyId:this.accessKeyId,secretAccessKey:this.secretAccessKey,...this.sessionToken&&{sessionToken:this.sessionToken}},l=n.sign({service:"sts",path:s},c);r({method:"GET",url:`${a.STS_URL}${s}`,...l},function(e,s){if(e)return t(e);try{let e=new i().parse(s.body);if(e.ErrorResponse)return t("Failed to assume role");return t(null,e?.AssumeRoleResponse?.AssumeRoleResult)}catch(e){return t(e)}})}getCallerIdentity(e,t){this.apiVersion;let s={accessKeyId:this.accessKeyId,secretAccessKey:this.secretAccessKey,...this.sessionToken&&{sessionToken:this.sessionToken}},o={service:"sts",body:`Action=GetCallerIdentity&Version=${this.apiVersion}`},c=n.sign(o,s);r({url:`${a.STS_URL}/`,...c},function(e,s){if(e)return t(e);if(200!=s.statusCode)return t("Failed to verify credentials");try{if(new i().parse(s.body).ErrorResponse)return t("Failed to verify credentials");return t(null,!0)}catch(e){return t(e)}})}}class c{static IAM_URL="https://iam.amazonaws.com";constructor(e){this.apiVersion=e.apiVersion,this.accessKeyId=e.accessKeyId,this.secretAccessKey=e.secretAccessKey}listMFADevices(e,t){let s=o({Version:this.apiVersion,Action:"ListMFADevices"}),a={accessKeyId:this.accessKeyId,secretAccessKey:this.secretAccessKey},l=n.sign({service:"iam",path:s},a);r({method:"GET",url:`${c.IAM_URL}${s}`,...l},function(e,s){if(e)return t(e);try{let e=new i().parse(s.body);if(e.ErrorResponse){let s=e.ErrorResponse?.Error?.Type,r=e.ErrorResponse?.Error?.Code,i=e.ErrorResponse?.Error?.Message;return t({type:s,code:r,message:i})}let r=e?.ListMFADevicesResponse?.ListMFADevicesResult;return r?.MFADevices?.member&&!Array.isArray(r.MFADevices.member)&&(r.MFADevices.member=[r.MFADevices.member]),r?.MFADevices?.member?r.MFADevices=r.MFADevices.member:r.MFADevices=[],t(null,r)}catch(e){return t(e)}})}}e.exports={STS:a,SecretsManager:class{constructor(e){this.apiVersion=e.apiVersion,this.accessKeyId=e.accessKeyId,this.secretAccessKey=e.secretAccessKey,this.region=e.region,this.sessionToken=e.sessionToken}getSecretsManagerEndpoint(){return`https://secretsmanager.${this.region}.amazonaws.com`}getSecretValue(e,t){let s={accessKeyId:this.accessKeyId,secretAccessKey:this.secretAccessKey,sessionToken:this.sessionToken},i=JSON.stringify({SecretId:e.SecretId,VersionId:e.VersionId}),o={method:"POST",service:"secretsmanager",region:this.region,headers:{"Content-Type":"application/x-amz-json-1.1","X-Amz-Target":"secretsmanager.GetSecretValue"},body:i},a=n.sign(o,s);r({method:"POST",url:this.getSecretsManagerEndpoint(),...a},function(e,s){if(e)return t(e);try{let e=JSON.parse(s.body);if(200!=s.statusCode)return t("Failed to fetch Secret Value");return t(null,e)}catch(e){return t(e)}})}},IAM:c}},"./utils/getSystemProxy.js":function(e,t,s){var r=s("./node_modules/postman-collection/index.js").ProxyConfig,i=s("./services/CloudProxyManager.js"),n="http",o=[n,"https"].join("|"),a=n+"://";e.exports=(e,t)=>{s("electron").session.defaultSession;var n,c,l,h,u,d,p,f={hostPortMatcher:/(PROXY|SOCKS\d*)\s+(([^:]+):(\d+))/,validUrlTester:"^("+o+")://"},g=e.match(f.validUrlTester)?e:a+e,m=g.split("://")[0];try{i.resolveProxy(g,(e,s,i)=>{if(e&&t(e),"DIRECT"===s)return t(null,void 0);if(!(n=s.match(f.hostPortMatcher)))return pm.logger.warn("getSystemProxy - System proxy defined has invalid syntax"),t(null,void 0);h=n[1],c=n[3],l=parseInt(n[4],10),i&&(u=!0,d=i.username,p=i.password);let o={host:c,port:l,protocols:[m],authenticate:u,username:d,password:p};return h&&h.startsWith("SOCKS")&&(o.protocol=h.toLowerCase()),t(null,new r(o))})}catch(e){return t(e)}}}};